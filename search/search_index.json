{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Kundenauftrag \u2013 Angebot - IT-Installation"},{"location":"#inhaltsverzeichnis","title":"Inhaltsverzeichnis","text":"<ul> <li>Phase 1</li> <li>Phase 2</li> <li>Phase 3</li> <li>Phase 4</li> <li>Phase 5</li> <li>Phase 6</li> <li>Phase 7</li> <li>Phase 8</li> <li>Phase 9</li> </ul>"},{"location":"Phase-1/","title":"Phase 1","text":""},{"location":"Phase-1/#beschreibung-der-geschaftsprozesszenarien-des-kunden","title":"Beschreibung der Gesch\u00e4ftsprozesszenarien des Kunden","text":"<p> Erledigt</p> <p>In der Phase 1 ging es darum, aus dem Arbeitsauftrag herauszufinden bzw. zu identifizieren, welche USE-Cases (Anwendungsf\u00e4lle) vorliegen. Dabei ging es zum einen darum, alle beteiligten Personen und Systeme (Akteure) zu erkennen und zum anderen deren Zusammenhang zu den Anwendungsf\u00e4llen aufzuzeigen.</p> <p>Dazu wurde ein Anwendungsfalldiagramm erstellt, was folglich dargestellt wird:</p> <p></p> <p>Zur Erkl\u00e4rung des Anwendungsfalldiagramms eine kurze Zusammenfassung:</p> <p>Ein Anwendungsfalldiagramm ist eine Art von Diagramm, das verwendet wird, um die verschiedenen Anwendungsf\u00e4lle oder Funktionalit\u00e4ten eines Systems zu modellieren. Es zeigt die verschiedenen Akteure, die mit dem System interagieren, sowie die verschiedenen Funktionen oder Aktionen, die das System ausf\u00fchren kann, um den Anforderungen der Akteure zu entsprechen.</p> <p>Der Zweck eines Anwendungsfalldiagramms besteht darin, einen \u00dcberblick \u00fcber das System und seine Interaktionen mit den Benutzern oder anderen Systemen zu geben. Es kann verwendet werden, um die Anforderungen an das System zu dokumentieren, die Funktionalit\u00e4ten des Systems zu analysieren und zu testen, sowie um die Interaktionen und Abh\u00e4ngigkeiten zwischen den verschiedenen Teilen des Systems zu verstehen und zu visualisieren. Es ist auch ein n\u00fctzliches Kommunikationswerkzeug zwischen Entwicklern, Kunden und anderen Interessengruppen, um sicherzustellen, dass alle Beteiligten ein gemeinsames Verst\u00e4ndnis davon haben, wie das System arbeiten soll.</p>"},{"location":"Phase-2/","title":"Phase 2","text":""},{"location":"Phase-2/#einrichtung-der-gemeinsamen-dokumentenablage-mit-git-bzw-bei-anderen-vorlieben-auch-gern-einer-alternative","title":"Einrichtung der gemeinsamen Dokumentenablage mit git (bzw. bei anderen Vorlieben auch gern einer Alternative)","text":"<p> Erledigt</p> <p>Zur Versionskontrolle sollte eine gemeinsame Plattform eingerichtet werden, wo alle Projektmitglieder kostenlos teilnehmen k\u00f6nnen. Dazu wurde Github verwendet, wo sich alle Teammitglieder selbst\u00e4ndig einen Account eingerichtet haben und dem vom Teamleiter erstellten privaten Repository \"Project_LF8\" (https://github.com/Wespey/Project_LF8) auf Anfrage beigetreten sind. Dort wurden f\u00fcr alle bisherigen Phasen (Phase 1-9) Ordner erstellt, die eine \u00fcbersichtliche Abarbeitung der Aufgaben gew\u00e4hrleisten sollen.</p> <p>Nachfolgend ein Bild zur Veranschaulichung des erstellten Github-Repositorys:</p> <p></p> <p>Online l\u00e4sst sich das Repository auf Github einfach verwalten. Mithilfe von entsprechenden Git-Clients l\u00e4sst sich aber auch eine lokale Kopie des Online-Repositories durch entsprechende Befehle anlegen und synchronisieren. Hier eine kleine Tabelle zu den wichtigsten Git-Befehlen:</p> Befehl Beschreibung <code>git init</code> Initialisiert ein neues Git-Repository. <code>git clone &lt;URL&gt;</code> Klont ein bestehendes Git-Repository von einer URL. <code>git add &lt;Dateiname&gt;</code> F\u00fcgt eine Datei zum Index (Staging Area) hinzu. <code>git commit -m \"Nachricht\"</code> Committet die \u00c4nderungen im Index mit einer beschreibenden Nachricht. <code>git status</code> Zeigt den Status des Arbeitsverzeichnisses und des Indexes an. <code>git log</code> Zeigt eine chronologische Liste der Commits im aktuellen Branch an. <code>git branch</code> Zeigt eine Liste der vorhandenen Branches an. <code>git checkout &lt;Branch&gt;</code> Wechselt zum angegebenen Branch. <code>git merge &lt;Branch&gt;</code> F\u00fchrt den angegebenen Branch in den aktuellen Branch ein. <code>git pull</code> Holt die \u00c4nderungen vom Remote-Repository und f\u00fchrt einen Merge durch. <code>git push</code> Sendet die lokalen \u00c4nderungen zum Remote-Repository. <code>git remote add &lt;Name&gt; &lt;URL&gt;</code> F\u00fcgt ein neues Remote-Repository hinzu. <p>Warnung: Ist man mit den obenstehenden Befehlen nicht vertraut, empfiehlt es sich, diese sorgf\u00e4ltig in offiziellen Dokumentationen genau durchzulesen.</p>"},{"location":"Phase-3/","title":"Phase 3","text":""},{"location":"Phase-3/#darstellung-der-zeitlichen-reihenfolge-der-tatigkeiten","title":"Darstellung der zeitlichen Reihenfolge der T\u00e4tigkeiten","text":"<p> Erledigt</p> <p>In Phase 3 wurde zur Darstellung der zeitlichen Abl\u00e4ufe ein Sequenzdiagramm erstellt. Dieses zeigt wie in dem UML-Anwendungsfalldiagramm die beteiligten Personen und wann von wem etwas abgearbeitet wird. Dabei ist auch die Interaktion zwischen den einzelnen Teilnehmern zu erkennen.</p> <p>Unser daraus erstelltes Sequenzdiagramm ist nachfolgend zu sehen:</p> <p></p> <p>In dem Sequenzdiagramm dienen zur Darstellung dieser zeitlichen Abl\u00e4ufe und Aufgaben vordefinierte Elemente. In nachfolgender Tabelle sind einige wichtige beschrieben.</p> Element Beschreibung Objekte (Strichm\u00e4nnchen, Rechtecke) Repr\u00e4sentieren Instanzen von Klassen oder Komponenten in der Softwareanwendung Lebenslinien (Linien ausgehend von den Strichm\u00e4nnchen/Rechtecken) Repr\u00e4sentieren die Lebensdauer eines Objekts im Ablauf der Softwareanwendung Nachrichten (Pfeile mit Text zwischen den Lebenslinien der Objekte) Repr\u00e4sentieren die Interaktion zwischen Objekten Aktivierungsbalken (\"Balken\" auf den Lebenslinien, von denen die Pfeile ausgehen ) Repr\u00e4sentieren den Zeitraum, in dem ein Objekt eine Aufgabe ausf\u00fchrt Funktionen/Methoden (Text auf Pfeilen) Repr\u00e4sentieren die Aktionen, die ein Objekt ausf\u00fchrt"},{"location":"Phase-4/","title":"Phase 4","text":""},{"location":"Phase-4/#erstellung-eines-projekt-wikis","title":"Erstellung eines Projekt-Wikis","text":"<p> Erledigt</p> <p>In der Phase 4 wurde das hier zu sehende Wiki erstellt. MKDocs wurde dabei auf Github eingebunden. Die Darstellung wurde mit der Markup-Sprache Markdown erstellt, die es erm\u00f6glicht, Formatierungen wie \u00dcberschriften, Abs\u00e4tze, Listen, Links, Bilder und andere Elemente zu erstellen. Zudem lassen sich verschiedene Themes einbinden, womit das Layout der Seite ver\u00e4ndert werden kann. Aber auch andere Sprachen wie Java-Script oder HTML lassen sich \u00fcber Markdown per MKDocs einbinden.</p> <p>Wie l\u00e4sst sich MKDocs einbinden?</p>"},{"location":"Phase-4/#1-anforderungen","title":"1. Anforderungen","text":"<p>MKdocs l\u00e4sst sich \u00fcber Github-Pages zur Verf\u00fcgung stellen. Grunds\u00e4tzlich ist dabei zu beachten, dass das verwendete Repository \u00f6ffentlich ist. Bei einem privaten Repository ist diese Funktion nicht gegeben. Somit haben wir neben dem privaten Repository (https://github.com/Wespey/Project_LF8) das \u00f6ffentliche Repository (https://github.com/Wespey/Project_LF8_mkdocs) erstellt. Die Installation wurde auf einer Linux-VM (OS: LinuxMint) durchgef\u00fchrt.</p> <p>Hinweis: Beim klonen, pullen, pushen oder dem sp\u00e4teren Deployment von mkdocs in ein Repository, wird man immer dazu aufgefordert, sich mit dem eigenen Github-Account zu identifizieren. Jedoch kann man dies nichtmehr einfach mit seinem Passwort machen, sondern ben\u00f6tigt eine Art \"Sitzungstoken\". Diesen Token gibt es in mehreren Varianten, wo z. B. festegelegt werden kann, f\u00fcr welches Repository er Zugriff gew\u00e4hrleisten kann. Zudem definiert man die Zugriffsrechte, die man mit diesem Token hat, in dem Token selbst. Man findet diese Option zum Erstellen versteckt in den Benutzereinstellungen von Github, siehe unteres Bild.    </p> <p></p> <p>Tipp: Die ID von dem Sitzungstoken wird nur einmal angezeigt, weshalb man diesen kopieren, und am besten SICHER speichern sollte.</p>"},{"location":"Phase-4/#2-installation-von-pip-und-mkdocs","title":"2. Installation von pip und mkdocs","text":"<p>Pip ist der python-integrierte Packet-Manager. Mithilfe von <code>sudo apt-get install pip</code> l\u00e4sst sich auf der Linux-VM dieser installieren. Anschlie\u00dfend l\u00e4sst sich mit pip mkdocs mit folgendem Befehl installieren: <code>pip install mkdocs mkdocs-material</code>.</p>"},{"location":"Phase-4/#3-mkdocs-ordnerstruktur-und-theme-anlegen","title":"3. MKDocs-Ordnerstruktur und Theme anlegen","text":"<p>MKDocs muss direkt im \u00f6ffentlichen Repository deployed werden. Dazu wird zuerst mit <code>git clone [URL des \u00f6ffentlichen Repositorys]</code>das Repository lokal geklont. Danach wird im geklonten Repository die Datei mkdocs.yml angelegt. </p> <p>In dieser Datei l\u00e4sst sich das Layout und Theme festlegen:</p> <pre><code>site_name: Kunde - Auftrag - IT-Installation\n nav:\n   - index.md\n   - Phase-1.md\n   - Phase-2.md\n   - Phase-3.md\n   - Phase-4.md\n   - Phase-5.md\n   - Phase-6.md\n   - Phase-7.md\n   - Phase-8.md\n   - Phase-9.md\n theme:\n   name: material\n   markdown-extensions:\n     - abbr\n     - admonition\n     - attr_lists\n     - md_in_html\n     - pydownx_superfences\n   features:\n     - navigation.path\n     - navigation.tabs\n     - navigation.sections\n     - toc.integrate\n     - navigation.top\n     - search.suggest\n     - search.highlights\n     - content.tabs.link\n     - content.code.annotation\n     - content.code.copy\n\n   language: de\n   palette:\n     - scheme: default\n       toggle:\n         icon: material/toggle-switch-off-outline\n         name: Wechsel zum dunklen Modus\n       primary: deep orange\n       accent: black\n     - scheme: slate\n       toggle:\n         icon: material/toggle-switch\n         name: Wechsel zum hellen Modus\n       primary: deep orange\n       accent: lime\n</code></pre> <p>Danach ist folgende Ordnerstruktur anzulegen:</p> <pre><code>Project_LF8_mkdocs   &lt;Reporsitory&gt;\nmkdocs.yml\n-docs           &lt;Ordner mit Markdown-\"Seiten\"&gt;\nindex.md\nPhase-1.md\nPhase-2.md\nPhase-3.md\nPhase-4.md\nPhase-5.md\nPhase-6.md\nPhase-7.md\nPhase-8.md\nPhase-9.md\n</code></pre> <p>Die einzelnen Markdown-Dateien stellen in der Navigationsleiste die unterschiedlichen Seiten dar, sofern man in der mkdocs.yml entsprechende Features angegeben hat. In den Dateien l\u00e4sst sich nun der Inhalt in der Sprache Markdown umsetzen.</p> <p>Ist dies nun erledigt, kann man mit bash (Kommandozeile in Linux) in das Projektverzeichnis mit <code>cd &lt;Projektverzeichnis&gt;</code> wechseln und den Befehl <code>mkdocs serve</code> ausf\u00fchren. Damit wird \u00fcber die Localhost-Adresse https://127.0.0.1:8000 die MKDocs-Seite angezeigt. Dies ist sehr hilfreich wenn man z. B. \u00c4nderungen t\u00e4tigt und man diese ansehen m\u00f6chte, bevor man sie auf gh-pages deployed.</p>"},{"location":"Phase-4/#4-auf-gh-pages-publizieren","title":"4. Auf gh-pages publizieren","text":"<p>Im Projektverzeichnis stehend l\u00e4sst sich nun mit dem Befehl <code>mkdocs gh-deploy</code> der Inhalt ver\u00f6ffentlichen. Dieser wird in der eigenen Branch \"gh-pages\" deployed. Mit <code>git checkout &lt;Branch&gt;</code> l\u00e4sst sich aber auch die Main-Branch ausw\u00e4hlen und dort mkdocs deployen. Danach ist die Seite unter <code>https://&lt;username&gt;.github.io/&lt;repositoryName&gt;</code> online verf\u00fcgbar.</p> <p>Gefahr: Bei einem weiteren Deployment wird der Inhalt \u00fcberschrieben, weshalb \u00c4nderungen \u00fcber Github selbst, nicht empfohlen sind.</p>"},{"location":"Phase-5/","title":"Phase 5","text":""},{"location":"Phase-5/#analyse-von-datenquellen-und-der-elektronischen-varianten","title":"Analyse von Datenquellen und der elektronischen Varianten","text":"<p> Erledigt</p> <p>Notwendige Daten, die als Voraussetzung f\u00fcr die Angebotserstellung dienen, sind:</p> <ul> <li>Grundrisse oder Skizzen der R\u00e4umlichkeiten, in denen die IT-Komponenten installiert werden sollen</li> <li>Ausgew\u00e4hlte IT-Komponenten mit den entsprechenden Eigenschaften (z.B. Leistung, Speicher, Hersteller, Modell, Preis)</li> <li>Zuordnung der IT-Komponenten zu den einzelnen R\u00e4umen</li> <li>Gesamtnetzwerkplan, der alle IT-Komponenten und deren Verbindungen darstellt</li> <li>Metainformationen wie Datum der Angebotserstellung, Name des Kunden, Name des Angebots etc.</li> </ul> <p>Datenquellen f\u00fcr diese Informationen sind:</p> <ul> <li>Grundrisspl\u00e4ne oder Skizzen der R\u00e4umlichkeiten, die vom Bearbeiter erstellt werden</li> <li>Datenbank der ITSystemHausDD GmbH, die vorhandene IT-Komponenten enth\u00e4lt</li> <li>Externe Datenquellen, um fehlende IT-Komponenten zu beschaffen</li> <li>Tabellenkalkulationen oder spezielle Planungssoftware, um die IT-Komponenten den R\u00e4umen zuzuordnen und den Gesamtnetzwerkplan zu erstellen</li> </ul> <p>Datenformate, in denen diese Daten dargestellt werden k\u00f6nnen, sind:</p> <ul> <li>Bildformate wie JPG, PNG oder PDF f\u00fcr Grundrisse oder Skizzen</li> <li>Tabellenkalkulationen wie Excel oder CSV f\u00fcr die Auflistung der IT-Komponenten und ihre Eigenschaften</li> <li>Grafische Netzwerkplanungssoftware wie Visio oder AutoCAD f\u00fcr die Erstellung des Gesamtnetzwerkplans</li> </ul> <p></p> <p>Berechtigungen:</p> <ul> <li>Der Angestellte der SoftwareDD GmbH sollte Zugriff auf die von ihm entwickelte Software und die ben\u00f6tigten Informationen von der ITSystemHausDD GmbH erhalten.</li> <li>Der Projektleiter der ITSystemHausDD GmbH sollte Zugriff auf die Software und die IT-Komponenten-Datenbank haben, um den Prozess der Angebotserstellung zu    koordinieren.</li> <li>Der Bearbeiter der ITSystemHausDD GmbH sollte Zugriff auf die Software und die Datenbank haben, um die IT-Komponenten auszuw\u00e4hlen und den Grundriss der R\u00e4umlichkeiten zu skizzieren oder den Grundriss am PC zu erstellen.</li> <li>Die Abteilung Einkauf der ITSystemHausDD GmbH sollte Zugriff auf die Software und die Datenbank haben, um neue IT-Komponenten hinzuzuf\u00fcgen.</li> <li>Die Verkaufsabteilung der ITSystemHausDD GmbH sollte Zugriff auf die automatisch erstellten Angebote haben.</li> </ul> <p>Ein Datenformat f\u00fcr das Angebot k\u00f6nnte eine PDF-Datei sein, da diese plattformunabh\u00e4ngig und leicht zu \u00f6ffnen und zu drucken ist. Alternativ k\u00f6nnte auch eine HTML-Datei oder ein Word-Dokument verwendet werden, je nach Pr\u00e4ferenz der Verkaufsabteilung. </p> <p>Dazu haben wir einen kleinen Vergleich der Datenformate erstellt:</p> Datenformat Beschreibung Vorteile Nachteile Schutz- und Sicherheitseigenschaften PDF Portable Document Format - plattformunabh\u00e4ngig- leicht lesbar und druckbar- sehr verbreitet - nicht einfach editierbar- schwierig automatisch zu generieren - Kann mit einem Passwort verschl\u00fcsselt werden- Digitale Signaturen sind m\u00f6glich DOCX Microsoft Word - flexibel- einfach editierbar - nicht plattformunabh\u00e4ngig- potentiell formatierungsprobleme - Kann mit einem Passwort verschl\u00fcsselt werden- Digitale Signaturen sind m\u00f6glich HTML Hypertext Markup Language - plattformunabh\u00e4ngig- leicht editierbar- kann einfach ins Web integriert werden - nicht einfach zu drucken- ben\u00f6tigt Browser zur Anzeige - Keine nativen Schutz- oder Sicherheitsfunktionen- Abh\u00e4ngig von der Webserver- und Browser-Konfiguration CSV Comma-Separated Values - sehr einfach zu lesen und zu bearbeiten- plattformunabh\u00e4ngig - keine Formatierung- nicht f\u00fcr komplexe Dokumente geeignet - Keine nativen Schutz- oder Sicherheitsfunktionen"},{"location":"Phase-6/","title":"Phase 6","text":""},{"location":"Phase-6/#erstellung-einer-benutzerverwaltung","title":"Erstellung einer Benutzerverwaltung","text":"<p> Offen</p>"},{"location":"Phase-7/","title":"Phase 7","text":""},{"location":"Phase-7/#erstellung-eines-it-sicherheitskonzeptes","title":"Erstellung eines IT-Sicherheitskonzeptes","text":"<p> Offen</p>"},{"location":"Phase-8/","title":"Phase 8","text":""},{"location":"Phase-8/#datenquellen-in-einen-zentralen-datenbestand-uberfuhren","title":"Datenquellen in einen zentralen Datenbestand \u00fcberf\u00fchren","text":"<p> Offen</p>"},{"location":"Phase-9/","title":"Phase 9","text":""},{"location":"Phase-9/#zentralen-datenbestand-mit-nutzerverwaltung-umsetzen","title":"Zentralen Datenbestand mit Nutzerverwaltung umsetzen","text":"<p> Offen</p>"}]}